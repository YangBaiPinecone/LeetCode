//http://www.cnblogs.com/grandyang/p/4601208.html
//用stack存储数字，加号作为分割符

class Solution {
public:
    int calculate(string s) {
        int res=0;
        int num=0;
        int n=s.size();
        char op='+';    // 初始值为加，因为第一个数为0
        stack<int> st;
        for(int i=0;i<n;++i)
        {
            if(s[i]>='0')
            {
                num = num*10+(s[i]-'0');
            }
            if((s[i]<'0'&&s[i]!=' ') || i==n-1)    //当前字符为符号，或者到了最后一位（此位不可能为符号）
            {
                if(op=='+')
                    st.push(num);
                if(op=='-')
                    st.push(-num);
                if(op=='*' || op=='/')
                {
                    int tmp = (op=='*')?st.top()*num:st.top()/num;
                    st.pop();
                    st.push(tmp);
                }
                op=s[i];
                num=0;
            }

        }
        while(!st.empty())
        {
            res+=st.top();
            st.pop();
        }
        return res;
    }
};
