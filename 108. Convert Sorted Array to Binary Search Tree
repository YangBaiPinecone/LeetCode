// https://blog.csdn.net/feliciafay/article/details/18430897

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* helper(vector<int>& nums, int start, int end)
    {
        if(start>end)
            return NULL;
        if(start==end)
            return new TreeNode(nums[start]);
        int mid = start + (end-start)/2;
        TreeNode* root=new TreeNode(nums[mid]);
        root->left=helper(nums,start,mid-1);
        root->right=helper(nums,mid+1,end);
        return root;
    }
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        if(nums.size()==0)
            return NULL;
        return helper(nums,0,nums.size()-1);
    }
};
