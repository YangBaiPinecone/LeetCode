// similar as 102 but reverse level vector if the level index is odd number

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> res;
        if(root==NULL)
            return res;
        queue<TreeNode* > q;
        q.push(root);
        int level_idx=1;
        while(!q.empty())
        {
            int size=q.size();
            vector<int> level;
            for(int i=0;i<size;++i)
            {
                TreeNode* head=q.front();
                q.pop();
                level.push_back(head->val);
                if(head->left!=NULL)
                {
                    q.push(head->left);
                }
                if(head->right!=NULL)
                {
                    q.push(head->right);
                }
            }
            if(level_idx%2==1)
            {
                res.push_back(level);
            }
            else
            {
                reverse(level.begin(),level.end());
                res.push_back(level);
            }
            ++level_idx;
        }
        return res;
    }
};
