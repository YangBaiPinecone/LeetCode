// https://blog.csdn.net/magicbean2/article/details/70231756

class Solution {
public:
    vector<int> grayCode(int n) {
        vector<int> res{0};
        if(n==0)
        {
            return res;
        }
        else if(n==1)
        {
            res.push_back(1);   //{0;1}
            return res;
        }
        res=grayCode(n-1);
        int half_size=res.size();
        int add_value=1<<(n-1);     // 1 shift left (n-1) bits
        for(int i=half_size-1; i>=0; --i)
        {
            res.push_back(add_value+res[i]);     // mirrow reflect 
        }
        return res;
    }
};
