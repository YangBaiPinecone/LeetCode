class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int minPrice=INT_MAX;
        int maxProfit=0;
        for(int i=0;i<prices.size();++i)
        {
            if(prices[i]<minPrice)
            {
                minPrice=prices[i];
            }
            else if((prices[i]-minPrice)>maxProfit)
            {
                maxProfit=prices[i]-minPrice;
            }
        }
        return maxProfit;
    }
};


122. Best Time to Buy and Sell Stock II
// solution from leetcode and url below
// http://www.cnblogs.com/grandyang/p/4280803.html

class Solution {
public:
    int maxProfit(vector<int>& prices) {
        if(prices.size()==0)
            return 0;
        int peak=prices[0];
        int valley=prices[0];
        int profit=0;
        int i=0;
        while(i<prices.size()-1)
        {
            while(i<prices.size()-1 && prices[i]>=prices[i+1])
            {
                ++i;
            }
            valley=prices[i];
            while(i<prices.size()-1 && prices[i]<=prices[i+1])
            {
                ++i;
            }
            peak=prices[i];
            profit+=peak-valley;
        }
        return profit;
    }
};
