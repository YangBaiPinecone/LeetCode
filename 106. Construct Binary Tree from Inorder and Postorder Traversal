// http://www.cnblogs.com/grandyang/p/4296193.html

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* helper(vector<int>& inorder, vector<int>& postorder, int li, int ri, int lp, int rp)
    {
        if(lp>rp)
            return NULL;
        TreeNode* head=new TreeNode(postorder[rp]);
        for(int i=li;i<=ri;++i)
        {
            if(inorder[i]==postorder[rp])
            {
                head->left=helper(inorder,postorder,li,i-1,lp,lp+i-li-1);
                head->right=helper(inorder,postorder,i+1,ri,lp+i-li,rp-1);
            }
        }
        return head;
    }
    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
        return helper(inorder,postorder,0,inorder.size()-1,0,postorder.size()-1);
    }
};
