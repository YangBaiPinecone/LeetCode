// 注意最后的条件关系
// http://www.cnblogs.com/grandyang/p/4128461.html

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    int getLength(ListNode * head)
    {
        if(head==NULL)
            return 0;
        else
        {
            int cnt=0;
            while(head!=NULL)
            {
                head=head->next;
                ++cnt;
            }
            return cnt;
        }
    }
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        if(headA==NULL || headB==NULL)
            return NULL;
        int lenA=getLength(headA);
        int lenB=getLength(headB);
        if(lenA < lenB)
        {
            for(int i=0;i<lenB-lenA;++i)
            {
                headB=headB->next;
            }
        }
        else
        {
            for(int i=0;i<lenA-lenB;++i)
            {
                headA=headA->next;
            }
        }
        while(headA!=NULL && headB!=NULL && headA!=headB)
        {
            headA=headA->next;
            headB=headB->next;
        }
        return (headA && headB)? headA:NULL;
    }
};
